{"ast":null,"code":"/**\n * \n * @author Vinit Shahdeo <https://github.com/vinitshahdeo>\n */\nconst arr = require('../data/data.json'),\n  // utility to generate a random number\n  randomInt = (min, max) => Math.floor(Math.random() * (max - min + 1) + min),\n  index = randomInt(0, arr.length),\n  // random index to be used\n\n  /**\n   * \n   * Kept `getRandomQuote` method to ensure the backward compatibility as\n   * All the version <= `v1.0.8` has this method\n   * \n   * TO BE DEPRECATED SOON\n   */\n  getRandomQuote = () => arr[index].text,\n  /**\n   * \n   * By default, { author: true },\n   * To hide author, pass options as { author: false }\n   */\n  getQuote = options => {\n    !options && (options = {\n      author: true\n    }); // default option\n    return {\n      text: arr[index].text,\n      ...(options && options.author ? {\n        author: arr[index].from\n      } : {})\n    };\n  };\nmodule.exports = {\n  getRandomQuote,\n  getQuote\n};","map":{"version":3,"names":["arr","require","randomInt","min","max","Math","floor","random","index","length","getRandomQuote","text","getQuote","options","author","from","module","exports"],"sources":["/data/data/com.termux/files/home/apps/react.js/quotes-app/node_modules/inspirational-quotes/lib/index.js"],"sourcesContent":["/**\n * \n * @author Vinit Shahdeo <https://github.com/vinitshahdeo>\n */\nconst arr = require('../data/data.json'),\n\n    // utility to generate a random number\n    randomInt = (min, max) => Math.floor(Math.random() * (max - min + 1) + min),\n    index = randomInt(0, arr.length), // random index to be used\n    \n    /**\n     * \n     * Kept `getRandomQuote` method to ensure the backward compatibility as\n     * All the version <= `v1.0.8` has this method\n     * \n     * TO BE DEPRECATED SOON\n     */\n    getRandomQuote = () => arr[index].text,\n\n    /**\n     * \n     * By default, { author: true },\n     * To hide author, pass options as { author: false }\n     */\n    getQuote = (options) => {\n        !options && (options = {author: true}); // default option\n        return {\n            text: arr[index].text,\n            ...(options && options.author ? { author: arr[index].from } : {})\n        };\n    };\n\nmodule.exports = {\n    getRandomQuote,\n    getQuote\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA,MAAMA,GAAG,GAAGC,OAAO,CAAC,mBAAmB,CAAC;EAEpC;EACAC,SAAS,GAAGA,CAACC,GAAG,EAAEC,GAAG,KAAKC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,IAAIH,GAAG,GAAGD,GAAG,GAAG,CAAC,CAAC,GAAGA,GAAG,CAAC;EAC3EK,KAAK,GAAGN,SAAS,CAAC,CAAC,EAAEF,GAAG,CAACS,MAAM,CAAC;EAAE;;EAElC;AACJ;AACA;AACA;AACA;AACA;AACA;EACIC,cAAc,GAAGA,CAAA,KAAMV,GAAG,CAACQ,KAAK,CAAC,CAACG,IAAI;EAEtC;AACJ;AACA;AACA;AACA;EACIC,QAAQ,GAAIC,OAAO,IAAK;IACpB,CAACA,OAAO,KAAKA,OAAO,GAAG;MAACC,MAAM,EAAE;IAAI,CAAC,CAAC,CAAC,CAAC;IACxC,OAAO;MACHH,IAAI,EAAEX,GAAG,CAACQ,KAAK,CAAC,CAACG,IAAI;MACrB,IAAIE,OAAO,IAAIA,OAAO,CAACC,MAAM,GAAG;QAAEA,MAAM,EAAEd,GAAG,CAACQ,KAAK,CAAC,CAACO;MAAK,CAAC,GAAG,CAAC,CAAC;IACpE,CAAC;EACL,CAAC;AAELC,MAAM,CAACC,OAAO,GAAG;EACbP,cAAc;EACdE;AACJ,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}